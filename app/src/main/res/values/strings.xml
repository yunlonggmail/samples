<resources>
    <string name="app_name">Samples</string>
    <string name="common_start_record_log">开始记录日志</string>
    <string name="common_stop_record_log">停止记录日志</string>

    <string name="nav_title_main">首页</string>
    <string name="nav_title_intent_main">意图首页</string>
    <string name="nav_title_intent_main_desc">意图相关页面的入口页面</string>
    <string name="nav_title_increment_update">增量更新_OLD</string>
    <string name="nav_title_increment_update_desc">增量更新功能演示_OLD</string>
    <string name="nav_title_intent_with_bundle">带参数登录跳转</string>
    <string name="nav_title_intent_with_bundle_desc">携带不同的参数,隐式意图登录跳转</string>
    <string name="nav_title_intent_without_bundle">不携带参数登录跳转</string>
    <string name="nav_title_intent_without_bundle_desc">不携带参数,隐式意图登录跳转</string>
    <string name="nav_title_intent_login">登录</string>
    <string name="nav_title_service_main">服务</string>
    <string name="nav_title_service_main_desc">服务功能主界面</string>
    <string name="nav_title_service_local_service">Local服务</string>
    <string name="nav_title_service_local_service_desc">Local服务基本功能[start/stop/bind/unbind]</string>
    <string name="nav_title_service_local_service_second">Local服务第二界面</string>
    <string name="nav_title_service_remote_service">Remote服务</string>
    <string name="nav_title_service_remote_service_desc">Remote服务基本功能[start/stop/bind/unbind]</string>
    <string name="nav_title_receiver_main">广播</string>
    <string name="nav_title_receiver_main_desc">广播功能主界面</string>

    <!--自定义功能-->
    <string name="nav_title_custom_main">自定义功能</string>
    <string name="nav_title_custom_main_desc">自定义功能主界面</string>
    <string name="nav_title_custom_lrmenu_main">自定义左右菜单</string>
    <string name="nav_title_custom_lrmenu_main_desc">左右两侧菜单，菜单不同布局不同显示</string>
    <string name="nav_title_custom_trebling_view">测试三重View</string>
    <string name="nav_title_custom_trebling_view_desc">三重View左右两侧不同背景，不同文字</string>
    <string name="nav_title_custom_wave_view">波浪View</string>
    <string name="nav_title_custom_wave_view_desc">波浪View</string>
    <string name="nav_title_custom_stroke_text_view">描边文本View</string>
    <string name="nav_title_custom_stroke_text_view_desc">带有描边的文字</string>
    <string name="nav_title_custom_loading_view">加载View</string>
    <string name="nav_title_custom_loading_view_desc">波纹加载页面</string>

    <string name="nav_title_system_function_main">系统功能</string>
    <string name="nav_title_system_function_main_desc">系统的主要功能相关开发</string>
    <string name="nav_title_system_function_multipoint">多点触摸</string>
    <string name="nav_title_system_function_multipoint_desc">多点触摸功能</string>
    <string name="nav_title_system_function_sensor_main">传感器主界面</string>
    <string name="nav_title_system_function_sensor_main_desc">系统传感器相关信息</string>
    <string name="nav_title_system_function_sensor_info">手机上的传感器</string>
    <string name="nav_title_system_function_sensor_info_desc">手机上的各个传感器信息</string>
    <string name="nav_title_system_function_motion_sensor">动作传感器</string>
    <string name="nav_title_system_function_motion_sensor_desc">各个动作传感器的数据操作</string>
    <string name="nav_title_system_function_nfc_main">NFC功能主界面</string>
    <string name="nav_title_system_function_nfc_main_desc">NFC功能的主要界面</string>
    <string name="nav_title_system_function_bluetooth_main">蓝牙功能主界面</string>
    <string name="nav_title_system_function_bluetooth_main_desc">蓝牙功能：基本打开蓝牙、静默打开蓝牙、打开蓝牙可被检查、搜索蓝牙、蓝牙连接及传递数据</string>
    <string name="nav_title_system_function_wifi_direct">Wi-Fi P2P</string>
    <string name="nav_title_system_function_wifi_direct_desc">Wi-Fi P2P：两个4.0+设备通过Wi-Fi P2P进行连接，并传递数据</string>
    <string name="nav_title_system_function_gps_main">GPS主界面</string>
    <string name="nav_title_system_function_gps_main_desc">GPS列表、</string>
    <string name="nav_title_system_function_gps_location_provider">GPS提供者列表页面</string>
    <string name="nav_title_system_function_gps_location_provider_desc">手机上的GPS提供者信息</string>
    <string name="nav_title_system_function_gps_location_info">GPS位置信息</string>
    <string name="nav_title_system_function_gps_location_info_desc">手机上的GPS位置信息（经度、纬度、高度、速度、方向），两点之间的距离</string>
    <string name="nav_title_system_function_camera_main">照相机功能主界面</string>
    <string name="nav_title_system_function_camera_main_desc">快速照相，快速摄像，自定义照相，自定义摄像</string>
    <string name="nav_title_system_function_camera_normal">照相机普通功能</string>
    <string name="nav_title_system_function_camera_normal_desc">快速照相，快速摄像</string>
    <string name="nav_title_system_function_camera_custom">定制照相机功能</string>
    <string name="nav_title_system_function_camera_custom_desc">定制照相，定制摄像</string>
    <string name="nav_title_system_function_media_player">音频操作</string>
    <string name="nav_title_system_function_media_player_desc">音频的播放和录制</string>
    <string name="nav_title_system_function_tts">TTS操作</string>
    <string name="nav_title_system_function_tts_desc">TextToSpeech 只识别英文</string>
    <string name="nav_title_system_function_ringtone">铃声设置</string>
    <string name="nav_title_system_function_ringtone_desc">设置来电，闹钟，通知的铃声</string>
    <string name="nav_title_animation_main">动画主界面</string>
    <string name="nav_title_animation_main_desc">Tween动画，Drawable动画，Property动画，MaterialDesign动画</string>
    <string name="nav_title_animation_tween_main">补间动画主界面</string>
    <string name="nav_title_animation_tween_main_desc">所有补间动画，自定义补间动画，动画合集</string>
    <string name="nav_title_animation_tween_animation_all">所有的补间动画</string>
    <string name="nav_title_animation_tween_animation_all_desc">AlphaAnimation，RotateAnimation, ScaleAnimation, TranslateAnimation,AnimationSet</string>
    <string name="nav_title_drawable_animation">帧动画界面</string>
    <string name="nav_title_drawable_animation_desc">帧动画页面XML和java代码实现帧动画</string>
    <string name="nav_title_animator_all">属性动画</string>
    <string name="nav_title_animator_all_desc">Animator,ValueAnimator,ObjectAnimator,TimeAnimator</string>
    <string name="nav_title_request">网络请求页面</string>
    <string name="nav_title_request_desc">所有的网络OKHttp、Refit</string>
    <string name="nav_title_request_ok">OKHttp请求</string>
    <string name="nav_title_request_ok_desc">OKHttp请求</string>
    <string name="nav_title_animation_md">MD动画</string>
    <string name="nav_title_animation_md_desc">MD动画：涟漪效果</string>

    <!--设计模式-->
    <string name="nav_title_design_pattern_main">设计模式主页面</string>
    <string name="nav_title_design_pattern_main_desc">23中设计模式介绍</string>

    <!--单例设计模式-->
    <string name="nav_title_design_pattern_singleton_main">单例模式设计模式主页面</string>
    <string name="nav_title_design_pattern_singleton_main_desc">确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例</string>
    <string name="nav_title_design_pattern_singleton_impl_list">单例模式模式具体实现列表</string>
    <string name="nav_title_design_pattern_singleton_impl_list_desc">单例模式具体实现的相关代码</string>

    <!--建造者设计模式-->
    <string name="nav_title_design_pattern_builder_main">建造者模式设计模式主页面</string>
    <string name="nav_title_design_pattern_builder_main_desc">将一个复杂对象的构建和它的表示分离，是的同样的构建过程可以创建不同的表示</string>
    <string name="nav_title_design_pattern_builder_impl_main">建造者模式具体实现主页面</string>
    <string name="nav_title_design_pattern_builder_impl_main_desc">建造者模式具体实现的相关代码</string>
    <string name="nav_title_design_pattern_builder_uml">建造者模式UML类图</string>
    <string name="nav_title_design_pattern_builder_uml_desc">建造者模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_builder_impl_test">建造者模式测试主页面</string>
    <string name="nav_title_design_pattern_builder_impl_test_desc">建造模式测试的页面，测试简单工厂功能</string>

    <!--原型设计模式-->
    <string name="nav_title_design_pattern_prototype_main">原型模式设计模式主页面</string>
    <string name="nav_title_design_pattern_prototype_main_desc">使用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。原型模式是一种对象创建型模式。</string>
    <string name="nav_title_design_pattern_prototype_impl_main">原型模式具体实现主页面</string>
    <string name="nav_title_design_pattern_prototype_impl_main_desc">原型模式具体实现的相关代码</string>
    <string name="nav_title_design_pattern_prototype_uml">原型模式UML类图</string>
    <string name="nav_title_design_pattern_prototype_uml_desc">原型模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_prototype_impl_test">原型模式测试主页面</string>
    <string name="nav_title_design_pattern_prototype_impl_test_desc">建造模式测试的页面，测试简单工厂功能</string>

    <!--工厂设计模式-->
    <string name="nav_title_design_pattern_factory_main">工厂设计模式主页面</string>
    <string name="nav_title_design_pattern_factory_main_desc">工厂设计模式：简单工厂设计模式，工厂方法设计模式，抽象工厂设计模式</string>

    <!--简单工厂-->
    <string name="nav_title_design_pattern_factory_simple_main">简单工厂设计模式页面</string>
    <string name="nav_title_design_pattern_factory_simple_main_desc">定义一个工厂类，它可以根据参数的不同返回不同类的实例，被创建的实例通常都具有共同的父类。因此简单工厂模式用于创建实例的方法是静态方法，因此简单工厂模式又被称为静态工厂方法模式，它属于创建型模式</string>
    <string name="nav_title_design_pattern_factory_simple_uml">简单工厂模式UML类图</string>
    <string name="nav_title_design_pattern_factory_simple_uml_desc">简单工厂模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_factory_simple_impl_main">简单工厂模式实现主页面</string>
    <string name="nav_title_design_pattern_factory_simple_impl_main_desc">简单工厂模式的实现</string>
    <string name="nav_title_design_pattern_factory_simple_impl_test">简单工厂模式测试主页面</string>
    <string name="nav_title_design_pattern_factory_simple_impl_test_desc">简单工厂模式测试的页面，测试简单工厂功能</string>

    <!--工厂方法-->
    <string name="nav_title_design_pattern_factory_method_main">工厂方法设计模式页面</string>
    <string name="nav_title_design_pattern_factory_method_main_desc">定义一个用于创建对象的接口，让子类决定将哪一个类实例化。工厂方法模式让一个类的实例化延迟到其子类</string>
    <string name="nav_title_design_pattern_factory_method_uml">工厂方法模式UML类图</string>
    <string name="nav_title_design_pattern_factory_method_uml_desc">工厂方法模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_factory_method_impl_main">工厂方法模式实现主页面</string>
    <string name="nav_title_design_pattern_factory_method_impl_main_desc">工厂方法模式的实现</string>
    <string name="nav_title_design_pattern_factory_method_impl_test">工厂方法模式测试主页面</string>
    <string name="nav_title_design_pattern_factory_method_impl_test_desc">工厂方法模式测试的页面，测试工厂方法功能</string>

    <!--抽象工厂-->
    <string name="nav_title_design_pattern_factory_abstract_main">抽象工厂设计模式页面</string>
    <string name="nav_title_design_pattern_factory_abstract_main_desc">提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为Kit模式，它是一种创建型模式</string>
    <string name="nav_title_design_pattern_factory_abstract_uml">抽象工厂模式UML类图</string>
    <string name="nav_title_design_pattern_factory_abstract_uml_desc">抽象工厂模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_factory_abstract_impl_main">抽象工厂模式实现主页面</string>
    <string name="nav_title_design_pattern_factory_abstract_impl_main_desc">抽象工厂模式的实现</string>
    <string name="nav_title_design_pattern_factory_abstract_impl_test">抽象工厂模式测试主页面</string>
    <string name="nav_title_design_pattern_factory_abstract_impl_test_desc">抽象工厂模式测试的页面，测试抽象工厂功能</string>

    <!--策略设计模式-->
    <string name="nav_title_design_pattern_strategy_main">策略模式设计模式主页面</string>
    <string name="nav_title_design_pattern_strategy_main_desc">定义一系列算法类，将每一个算法封装起来，并让它们可以相互替换，策略模式让算法独立于使用它的客户变化</string>
    <string name="nav_title_design_pattern_strategy_impl_list">策略模式具体实现列表</string>
    <string name="nav_title_design_pattern_strategy_impl_list_desc">策略模式具体实现的相关代码</string>
    <string name="nav_title_design_pattern_strategy_uml">策略模式UML类图</string>
    <string name="nav_title_design_pattern_strategy_uml_desc">策略模式UML类图图片展示</string>

    <!--状态设计模式-->
    <string name="nav_title_design_pattern_state_main">状态模式设计模式主页面</string>
    <string name="nav_title_design_pattern_state_main_desc">允许一个对象在其内部状态改变时，改变它的行为，对象看起来似乎修改了它的类。</string>
    <string name="nav_title_design_pattern_state_uml">状态模式UML类图</string>
    <string name="nav_title_design_pattern_state_uml_desc">状态模式UML类图图片展示</string>
    <string name="nav_title_design_pattern_state_impl_main">状态模式实现主页面</string>
    <string name="nav_title_design_pattern_state_impl_main_desc">状态模式两种不同的实现，以及实现的展示页面</string>
    <string name="nav_title_design_pattern_state_impl_test">状态模式测试主页面</string>
    <string name="nav_title_design_pattern_state_impl_test_desc">测试状态模式的展现</string>
    <string name="nav_title_design_pattern_state_first_impl_list">第一种状态设计模式实现方式</string>
    <string name="nav_title_design_pattern_state_first_impl_list_desc">第一种：环境类控制状态的流转，执行某种操作控制状态流转</string>
    <string name="nav_title_design_pattern_state_second_impl_list">第二种状态设计模式实现方式</string>
    <string name="nav_title_design_pattern_state_second_impl_list_desc">第一种：状态知道执行某种操作之后进入某种状态</string>

    <!--责任链设计模式-->
    <string name="nav_title_design_pattern_responsibility_main">责任链设计模式主页面</string>
    <string name="nav_title_design_pattern_responsibility_main_desc">避免请求发送者和接收者耦合在一起，让多个对象都有可能收到接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</string>
    <string name="nav_title_design_pattern_responsibility_impl_list">责任链模式具体实现列表</string>
    <string name="nav_title_design_pattern_responsibility_impl_list_desc">责任链模式具体实现的相关代码</string>
    <string name="nav_title_design_pattern_responsibility_uml">责任链模式UML类图</string>
    <string name="nav_title_design_pattern_responsibility_uml_desc">责任链模式UML类图图片展示</string>

    <!--JNI-->
    <string name="nav_title_jni_main_title">JNI主页面</string>
    <string name="nav_title_jni_main_title_desc">JNI相关的测试主页面</string>
    <string name="nav_title_jni_test_title">JNI主页面</string>
    <string name="nav_title_jni_test_title_desc">JNI相关的测试主页面</string>

    <!--测试-->
    <string name="nav_title_test_main">测试主页面</string>
    <string name="nav_title_test_main_desc">复制主页面</string>
    <string name="nav_title_test_a">A界面</string>
    <string name="nav_title_test_a_desc">测试A界面</string>
    <string name="nav_title_test_b">B界面</string>
    <string name="nav_title_test_b_desc">测试B界面</string>

    <string name="nav_title_copy_main">复制主页面</string>
    <string name="nav_title_copy_main_desc">复制主页面</string>
    <string name="nav_title_copy">复制页面</string>
    <string name="nav_title_copy_desc">复制页面</string>


    <!--学习-->
    <string name="nav_title_study_main">学习主界面</string>
    <string name="nav_title_study_main_desc">学习测试等相关界面</string>
    <string name="nav_title_study_custom_view">自定义控件</string>
    <string name="nav_title_study_custom_view_desc">自定义控件的生命周期，相关方法调用等</string>


    <!--设计模式-->
    <string name="a_design_pattern_file_empty">文件不存在</string>
    <string name="a_design_pattern_uml_image_empty">UML类图不存在，请仔细检查链接</string>

    <!--单例设计模式-->
    <string name="a_design_pattern_singleton_dcl_title">DCL单例</string>
    <string name="a_design_pattern_singleton_dcl_title_desc">双重锁判定(Double CheckLock)实现单例设计模式</string>
    <string name="a_design_pattern_singleton_enum_title">enum单例</string>
    <string name="a_design_pattern_singleton_enum_title_desc">使用enum实现单例设计模式</string>
    <string name="a_design_pattern_singleton_hungry_title">饿汉式单例</string>
    <string name="a_design_pattern_singleton_hungry_title_desc">饿汉式实现单例设计模式</string>
    <string name="a_design_pattern_singleton_lazy_title">懒汉式单例</string>
    <string name="a_design_pattern_singleton_lazy_title_desc">懒汉式实现单例设计模式</string>
    <string name="a_design_pattern_singleton_sic_title">SIC单例</string>
    <string name="a_design_pattern_singleton_sic_title_desc">静态内部类(Static Inner Class)实现单例设计模式</string>

    <!--建造者设计模式-->
    <string name="a_design_pattern_builder_test_product">具体产品</string>
    <string name="a_design_pattern_builder_test_product_concrete_null">还没有生产具体的产品</string>
    <string name="a_design_pattern_builder_impl_builder">抽象建造者</string>
    <string name="a_design_pattern_builder_impl_builder_desc">抽象建造者类：为创建一个产品Product对象的各个部件指定的抽象接口</string>
    <string name="a_design_pattern_builder_impl_product">产品角色</string>
    <string name="a_design_pattern_builder_impl_product_desc">产品角色类：被构建的复杂对象，包含多个组成部件，具体建造者创建该产品的内部表示并定义它的装配过程</string>
    <string name="a_design_pattern_builder_impl_concrete_builder">具体建造者</string>
    <string name="a_design_pattern_builder_impl_concrete_builder_desc">具体建造者类：实现了Builder接口，实现各个部件的具体构造和装配方法，定义并明确它所创建的复杂对象。</string>
    <string name="a_design_pattern_builder_impl_concrete_director">指挥者</string>
    <string name="a_design_pattern_builder_impl_concrete_director_dec">指挥者类：指挥产品的具体构建过程，可以有多个构建过程，也可以使用多个指挥者类来管理多个构建过程</string>

    <!--原型设计模式-->
    <string name="a_design_pattern_prototype_test_copy">拷贝产品</string>
    <string name="a_design_pattern_prototype_test_copy_error">拷贝产品出现错误</string>
    <string name="a_design_pattern_prototype_impl_prototype">原型接口</string>
    <string name="a_design_pattern_prototype_impl_prototype_desc">原型接口类：指定的原型接口，所有的原型都是它的子类，但是这个类一般在多个相同或类似的原型存在时调用</string>
    <string name="a_design_pattern_prototype_impl_concrete_prototype">具体原型</string>
    <string name="a_design_pattern_prototype_impl_concrete_prototype_desc">具体原型角色类：被构建的复杂对象，通过clone方法来实现具体原型的copy，来满足某些特定条件或者快速创建具体类</string>
    <string name="a_design_pattern_prototype_impl_concrete_prototype_part">具体原型的Part</string>
    <string name="a_design_pattern_prototype_impl_concrete_prototype_part_desc">具体原型的Part：用来演示原型针对内部对象的深层拷贝。</string>

    <!--工厂设计模式-->
    <!--简单工厂设计模式-->
    <string name="a_design_pattern_factory_simple_test_product_concrete_a">具体产品A</string>
    <string name="a_design_pattern_factory_simple_test_product_concrete_b">具体产品B</string>
    <string name="a_design_pattern_factory_simple_test_product_concrete_null">还没有生产具体的产品</string>
    <string name="a_design_pattern_factory_simple_impl_factory">工厂角色类</string>
    <string name="a_design_pattern_factory_simple_impl_factory_desc">工厂角色类：使用静态方法，根据需求生产不同的产品</string>
    <string name="a_design_pattern_factory_simple_impl_product">抽象产品类</string>
    <string name="a_design_pattern_factory_simple_impl_product_desc">抽象产品类：抽象产品，所有需要生产产品的抽象出来的父类</string>
    <string name="a_design_pattern_factory_simple_impl_concrete_product_a">具体产品类A</string>
    <string name="a_design_pattern_factory_simple_impl_concrete_product_a_desc">具体产品类A：生产出来的具体产品A</string>
    <string name="a_design_pattern_factory_simple_impl_concrete_product_b">具体产品类B</string>
    <string name="a_design_pattern_factory_simple_impl_concrete_product_b_desc">具体产品类B：生产出来的具体产品B</string>

    <!--工厂方法设计模式-->
    <string name="a_design_pattern_factory_method_test_produce_product">生产产品</string>
    <string name="a_design_pattern_factory_method_test_product_concrete_a">具体产品A</string>
    <string name="a_design_pattern_factory_method_test_product_concrete_b">具体产品B</string>
    <string name="a_design_pattern_factory_method_test_product_concrete_model">产品型号</string>
    <string name="a_design_pattern_factory_method_test_product_concrete_desc">产品描述</string>
    <string name="a_design_pattern_factory_method_test_product_concrete_null">还没有生产具体的产品</string>
    <string name="a_design_pattern_factory_method_impl_factory">工厂角色类</string>
    <string name="a_design_pattern_factory_method_impl_factory_desc">工厂角色类：抽象工厂类，所有的具体工厂需要实现该类，可以定义生产产品的方式</string>
    <string name="a_design_pattern_factory_method_impl_factory_concrete_a">具体工厂角色类A</string>
    <string name="a_design_pattern_factory_method_impl_factory_concrete_a_desc">具体工厂角色类A：生产具体产品A，每种生产产品的方式都是产品A，但是产品有细微差别</string>
    <string name="a_design_pattern_factory_method_impl_factory_concrete_b">具体工厂角色类B</string>
    <string name="a_design_pattern_factory_method_impl_factory_concrete_b_desc">具体工厂角色类：生产具体产品B，每种生产产品的方式都是产品B，但是产品有细微差别</string>
    <string name="a_design_pattern_factory_method_impl_product">抽象产品类</string>
    <string name="a_design_pattern_factory_method_impl_product_desc">抽象产品类：抽象产品，所有需要生产产品的抽象出来的父类</string>
    <string name="a_design_pattern_factory_method_impl_concrete_product_a">具体产品类A</string>
    <string name="a_design_pattern_factory_method_impl_concrete_product_a_desc">具体产品类A：生产出来的具体产品A</string>
    <string name="a_design_pattern_factory_method_impl_concrete_product_b">具体产品类B</string>
    <string name="a_design_pattern_factory_method_impl_concrete_product_b_desc">具体产品类B：生产出来的具体产品B</string>

    <!--抽象工厂设计模式-->
    <string name="a_design_pattern_factory_abstract_test_produce_product_1">生产产品1</string>
    <string name="a_design_pattern_factory_abstract_test_produce_product_2">生产产品2</string>
    <string name="a_design_pattern_factory_abstract_test_product_concrete_null">还没有生产具体的产品</string>

    <string name="a_design_pattern_factory_abstract_impl_factory">工厂角色类</string>
    <string name="a_design_pattern_factory_abstract_impl_factory_desc">工厂角色类：使用静态方法，根据需求生产不同的产品</string>
    <string name="a_design_pattern_factory_abstract_impl_factory_concrete_1">具体工厂类1</string>
    <string name="a_design_pattern_factory_abstract_impl_factory_concrete_1_desc">具体工厂类1：生产具体产品类1，每种产品只生产产品类1</string>
    <string name="a_design_pattern_factory_abstract_impl_factory_concrete_2">具体工厂类2</string>
    <string name="a_design_pattern_factory_abstract_impl_factory_concrete_2_desc">具体工厂类2：生产具体产品类1，每种产品只生产产品类1</string>

    <string name="a_design_pattern_factory_abstract_impl_abstract_product_a">抽象产品类A</string>
    <string name="a_design_pattern_factory_abstract_impl_abstract_product_a_desc">抽象产品类A：A类产品，产品族中的A类产品</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_a_1">具体产品类A1</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_a_1_desc">具体产品类A1：生产出来的具体产品A1</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_a_2">具体产品类A2</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_a_2_desc">具体产品类A2：生产出来的具体产品A2</string>

    <string name="a_design_pattern_factory_abstract_impl_abstract_product_b">抽象产品类B</string>
    <string name="a_design_pattern_factory_abstract_impl_abstract_product_b_desc">抽象产品类B：B类产品，产品族中的B类产品</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_b_1">具体产品类B1</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_b_1_desc">具体产品类B1：生产出来的具体产品B1</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_b_2">具体产品类B2</string>
    <string name="a_design_pattern_factory_abstract_impl_concrete_product_b_2_desc">具体产品类B2：生产出来的具体产品B2</string>

    <!--策略设计模式-->
    <string name="a_design_pattern_strategy_test_title">测试类</string>
    <string name="a_design_pattern_strategy_test_title_desc">一些简单的测代码，不是Junit</string>
    <string name="a_design_pattern_strategy_strategy_context_title">环境类</string>
    <string name="a_design_pattern_strategy_strategy_context_title_desc">环境类的主题代码，可以注入策略</string>
    <string name="a_design_pattern_strategy_strategy_context_a_title">具体的环境类A</string>
    <string name="a_design_pattern_strategy_strategy_context_a_title_desc">使用策略A的环境类</string>
    <string name="a_design_pattern_strategy_strategy_context_b_title">具体的环境类B</string>
    <string name="a_design_pattern_strategy_strategy_context_b_title_desc">使用策略B的环境类</string>
    <string name="a_design_pattern_strategy_strategy_abstract_title">抽象策略类</string>
    <string name="a_design_pattern_strategy_strategy_abstract_title_desc">主要是抽象出策略类的变化的代码</string>
    <string name="a_design_pattern_strategy_strategy_concrete_a_title">具体策略类A</string>
    <string name="a_design_pattern_strategy_strategy_concrete_a_title_desc">执行策略A的算法</string>
    <string name="a_design_pattern_strategy_strategy_concrete_b_title">具体策略类B</string>
    <string name="a_design_pattern_strategy_strategy_concrete_b_title_desc">执行策略B的算法</string>

    <!--状态设计模式-->
    <string name="a_design_pattern_state_first_impl_context">环境类</string>
    <string name="a_design_pattern_state_first_impl_context_desc">电视类：打开关闭电源，调整界面，调整声音</string>
    <string name="a_design_pattern_state_first_impl_state">状态类</string>
    <string name="a_design_pattern_state_first_impl_state_desc">状态类：不同的状态的抽象类，抽象操作有：调整界面，调整声音</string>
    <string name="a_design_pattern_state_first_impl_state_tv_power_on_state">电源打开状态类</string>
    <string name="a_design_pattern_state_first_impl_state_tv_power_on_state_desc">电源打开状态类：具体的操作</string>
    <string name="a_design_pattern_state_first_impl_state_tv_power_off_state">电源关闭状态类</string>
    <string name="a_design_pattern_state_first_impl_state_tv_power_off_state_desc">电源关闭状态类：具体的操作</string>

    <string name="a_design_pattern_state_second_impl_context">环境类</string>
    <string name="a_design_pattern_state_second_impl_context_desc">放大镜类：放大镜，点击进入不同的放大状态</string>
    <string name="a_design_pattern_state_second_impl_state">状态类</string>
    <string name="a_design_pattern_state_second_impl_state_desc">状态类：不同的状态的抽象类，抽象操作有：放大，展示</string>
    <string name="a_design_pattern_state_second_impl_state_normal_state">正常状态</string>
    <string name="a_design_pattern_state_second_impl_state_normal_state_desc">放大镜正常状态类：正常显示，点击后变成两倍状态</string>
    <string name="a_design_pattern_state_second_impl_state_twice_state">两倍状态</string>
    <string name="a_design_pattern_state_second_impl_state_twice_state_desc">放大镜两倍状态状态类：两倍显示，点击后变成4倍状态</string>
    <string name="a_design_pattern_state_second_impl_state_4_times_state">4倍状态</string>
    <string name="a_design_pattern_state_second_impl_state_4_times_state_desc">放大镜4倍状态类：4倍显示，点击后变成正常状态</string>
    <string name="a_design_pattern_state_test_power">电源</string>
    <string name="a_design_pattern_state_test_sound">声音</string>
    <string name="a_design_pattern_state_test_channel">节目</string>
    <string name="a_design_pattern_state_test_minus">-</string>
    <string name="a_design_pattern_state_test_plus">+</string>
    <string name="a_design_pattern_state_test_magnifier_enlarge">放大</string>

    <!--增量更新界面-->
    <string name="a_increment_update_generate_new_apk">生成新的APK_OLD</string>
    <string name="a_increment_update_install_new_apk">安装新的APK_OLD</string>

    <!--登录-->
    <string name="a_login_account_hint">账号</string>
    <string name="a_login_password_hint">密码</string>
    <string name="a_login_login">登录</string>
    <string name="a_login_success">登录成功</string>
    <string name="a_login_fail">登录失败</string>

    <!--服务-->
    <string name="a_local_service_main_service_info">传入服务的信息</string>
    <string name="a_local_service_main_start_service">开启服务</string>
    <string name="a_local_service_main_stop_service">关闭服务</string>
    <string name="a_local_service_main_bind_service">绑定服务</string>
    <string name="a_local_service_main_service_sync">同步数据</string>
    <string name="a_local_service_main_unbind_service">解除绑定服务</string>
    <string name="a_local_service_main_start_second_activity">开启服务第二个界面</string>

    <!--广播-->
    <string name="a_receiver_main_et_register_first_receiver_hint">第一个广播的优先级</string>
    <string name="a_receiver_main_btn_register_first_receiver">注册第一个广播</string>
    <string name="a_receiver_main_btn_unregister_first_receiver">解除注册第一个广播</string>
    <string name="a_receiver_main_et_register_second_receiver_hint">第二个广播的优先级</string>
    <string name="a_receiver_main_btn_register_second_receiver">注册第二个广播</string>
    <string name="a_receiver_main_btn_unregister_second_receiver">解除注册第二个广播</string>
    <string name="a_receiver_main_btn_send_receiver">发送广播</string>
    <string name="a_receiver_main_btn_send_order_receiver">发送有序广播</string>
    <string name="a_receiver_main_btn_send_abort_receiver">发送拦截广播</string>

    <!--服务-->
    <string name="a_custom_lrmenu_left_btn">左侧菜单按钮</string>
    <string name="a_custom_lrmenu_middle_btn">中间菜单按钮</string>
    <string name="a_custom_lrmenu_right_btn">右侧侧菜单按钮</string>

    <!--蓝牙-->
    <string name="a_bluetooth_not_support">该设备不支持蓝牙功能</string>
    <string name="a_bluetooth_normal_open">正常打开蓝牙设备</string>
    <string name="a_bluetooth_normal_open_enabled">蓝牙设备已打开</string>
    <string name="a_bluetooth_normal_open_disabled">蓝牙设备已关闭</string>
    <string name="a_bluetooth_silent_open">静默打开蓝牙设备</string>
    <string name="a_bluetooth_silent_close">静默关闭蓝牙设备</string>
    <string name="a_bluetooth_start_discovery">开始搜索蓝牙设备</string>
    <string name="a_bluetooth_cancel_discovery">停止搜索蓝牙设备</string>
    <string name="a_bluetooth_please_open">请先打开蓝牙设备</string>
    <string name="a_bluetooth_device_none">未绑定</string>
    <string name="a_bluetooth_device_boning">已绑定</string>
    <string name="a_bluetooth_device_bonded">绑定过的</string>
    <string name="a_bluetooth_create_server">创建蓝牙服务端</string>
    <string name="a_bluetooth_create_client">创建蓝牙客户端</string>
    <string name="a_bluetooth_client_msg">蓝牙客户端传递的数据</string>

    <!--WiFi直连-->
    <string name="a_wifi_p2p_discover">开始发现周围WiFi P2P设备</string>
    <string name="a_wifi_p2p_connect">连接两个设备</string>
    <string name="a_wifi_p2p_send_msg">发送消息</string>

    <!--GPS-->
    <string name="a_gps_location_distance_title">GPS距离信息</string>
    <string name="a_gps_info_longitude">经度</string>
    <string name="a_gps_info_latitude">纬度</string>
    <string name="a_gps_info_calc">计算</string>

    <!--Camera-->
    <string name="a_camera_normal_photo">拍照</string>
    <string name="a_camera_normal_video">录像</string>
    <string name="a_camera_normal_permission_denied">需要的权限被拒绝，该功能无法被使用</string>
    <string name="a_camera_normal_permission_setting">需要的权限被拒绝，该功能无法被使用，如果需要继续授权请前往设置页面进行授权</string>
    <string name="a_camera_custom_init">初始化</string>

    <!--Media-->
    <string name="a_media_player_play">播放%s</string>
    <string name="a_media_player_pause">暂停%s</string>
    <string name="a_media_player_stop">停止%s</string>
    <string name="a_media_player_raw">资源文件</string>
    <string name="a_media_player_sd">SD卡文件</string>
    <string name="a_media_player_record">录音</string>
    <string name="a_media_player_record_file">录音文件</string>
    <string name="a_media_player_stop_record">停止录音</string>

    <!--TextToSpeech-->
    <string name="a_tts_et_hint">只识别英文</string>
    <string name="a_tts_start">开始朗读</string>

    <!--TextToSpeech-->
    <string name="a_ringtone_call">设置来电铃声</string>
    <string name="a_ringtone_alarm">设置闹钟铃声</string>
    <string name="a_ringtone_notification">设置通知铃声</string>


    <!--TweenAnimationAll-->
    <string name="a_animation_tween_all_btn_start_java">执行Java动画</string>
    <string name="a_animation_tween_all_btn_start_xml">执行XML动画</string>
    <string name="a_animation_tween_all_duration">Duration</string>
    <string name="a_animation_tween_all_start_offset">StartOffset</string>
    <string name="a_animation_tween_all_repeat_count">RepeatCount</string>
    <string name="a_animation_tween_all_repeat_reverse">Reverse</string>
    <string name="a_animation_tween_all_repeat_restart">Restart</string>
    <string name="a_animation_tween_all_fill_before">FillBefore</string>
    <string name="a_animation_tween_all_fill_after">FillAfter</string>
    <string name="a_animation_tween_all_fill_enabled">FillEnabled</string>

    <string name="a_animation_tween_alpha_from">FromAlpha</string>
    <string name="a_animation_tween_alpha_to">ToAlpha</string>
    <string name="a_animation_tween_degree_from">FromDegree</string>
    <string name="a_animation_tween_degree_to">ToDegree</string>

    <string name="a_animation_tween_pivot_x_type">PivotXType</string>
    <string name="a_animation_tween_pivot_y_type">PivotYType</string>

    <string name="a_animation_tween_pivot_x">PivotX</string>
    <string name="a_animation_tween_pivot_y">PivotY</string>

    <string name="a_animation_tween_pivot_type_absolute">Absolute</string>
    <string name="a_animation_tween_pivot_type_self">Self</string>
    <string name="a_animation_tween_pivot_type_parent">Parent</string>

    <string name="a_animation_tween_translate_from_x_delta">FromXDelta</string>
    <string name="a_animation_tween_translate_from_y_delta">FromYDelta</string>
    <string name="a_animation_tween_translate_to_x_delta">ToXDelta</string>
    <string name="a_animation_tween_translate_to_y_delta">ToYDelta</string>
    <string name="a_animation_tween_translate_from_x_type">FromXType</string>
    <string name="a_animation_tween_translate_from_y_type">FromYType</string>
    <string name="a_animation_tween_translate_to_x_type">ToXType</string>
    <string name="a_animation_tween_translate_to_y_type">ToYType</string>

    <string name="a_animation_tween_type_absolute">Absolute</string>
    <string name="a_animation_tween_type_self">Self</string>
    <string name="a_animation_tween_type_parent">Parent</string>


    <string name="a_animation_tween_scale_from_x">fromX</string>
    <string name="a_animation_tween_scale_to_x">toX</string>
    <string name="a_animation_tween_scale_from_y">fromY</string>
    <string name="a_animation_tween_scale_to_y">toY</string>

    <string name="a_animation_tween_constructor_2">2个参数构造方法</string>
    <string name="a_animation_tween_constructor_4">4个参数构造方法</string>
    <string name="a_animation_tween_constructor_6">6个参数构造方法</string>
    <string name="a_animation_tween_constructor_8">8个参数构造方法</string>

    <string name="a_animation_tween_interpolator_start_anim">开始执行</string>
    <string name="a_animation_tween_interpolator_text_1">差值器1</string>
    <string name="a_animation_tween_interpolator_text_2">差值器2</string>
    <string name="a_animation_tween_interpolator_text_3">差值器3</string>
    <string name="a_animation_tween_interpolator_text_4">差值器4</string>
    <string name="a_animation_tween_interpolator_text_5">差值器5</string>
    <string name="a_animation_tween_interpolator_text_6">差值器6</string>
    <string name="a_animation_tween_interpolator_text_7">差值器7</string>
    <string name="a_animation_tween_interpolator_text_8">差值器8</string>
    <string name="a_animation_tween_interpolator_text_9">差值器9</string>
    <string name="a_animation_tween_interpolator_text_10">差值器10</string>
    <string name="a_animation_tween_interpolator_text_11">差值器11</string>
    <string name="a_animation_tween_interpolator_text_12">差值器12</string>
    <string name="a_animation_tween_interpolator_text_13">差值器13</string>


    <!--帧动画-->
    <string name="a_drawable_animation_btn_xml">XML帧动画</string>
    <string name="a_drawable_animation_btn_java">Java帧动画</string>

    <!--Animator-->
    <string name="a_animator_start_set">执行动画集合</string>
    <string name="a_animator_btn_int">OfInt(%d)</string>
    <string name="a_animator_btn_float">OfFloat(%f)</string>
    <string name="a_animator_btn_argb">OfArgb</string>
    <string name="a_animator_pk_p">PropertyValueHolder</string>
    <string name="a_animator_pk_k">KeyFrame</string>
    <string name="a_animator_extra_view">ViewAnimator</string>
    <string name="a_animator_extra_layout_add">add</string>
    <string name="a_animator_extra_layout_remove">remove</string>

    <!--MD动画-->
    <string name="a_animation_md_ripple">涟漪效果</string>

    <!--JNI-->
    <string name="a_jni_test_dynamic_1">动态注册1</string>

    <!--Request-->
    <!--OKHttp-->
    <string name="a_request_ok_btn_get">GET请求</string>


    <!--Copy复制页面-->
    <string name="a_copy_tv">文本</string>
    <string name="a_copy_et_hint">默认文本</string>
    <string name="a_copy_btn_text">按钮</string>

    <!--测试页面-->
    <string name="a_test_a_start_b">Start B</string>
    <string name="a_test_a_start_b_for_result">Start B For Result</string>
    <string name="a_test_b_finish_b">Finish B</string>
    <string name="a_test_b_finish_b_for_result">Finish B For Result</string>


</resources>
